// Code generated by mockery v1.0.0. DO NOT EDIT.

package reviewmocks

import (
	context "context"
	io "io"

	mock "github.com/stretchr/testify/mock"

	types "github.com/foundation-13/gpr/pkg/types"
)

// Manager is an autogenerated mock type for the Manager type
type Manager struct {
	mock.Mock
}

// AddImage provides a mock function with given fields: ctx, r, fileName, contentType
func (_m *Manager) AddImage(ctx context.Context, r io.Reader, fileName string, contentType string) error {
	ret := _m.Called(ctx, r, fileName, contentType)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, io.Reader, string, string) error); ok {
		r0 = rf(ctx, r, fileName, contentType)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CreateReview provides a mock function with given fields: ctx, userID, _a2
func (_m *Manager) CreateReview(ctx context.Context, userID string, _a2 types.ReviewDTO) (string, error) {
	ret := _m.Called(ctx, userID, _a2)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, string, types.ReviewDTO) string); ok {
		r0 = rf(ctx, userID, _a2)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, types.ReviewDTO) error); ok {
		r1 = rf(ctx, userID, _a2)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
